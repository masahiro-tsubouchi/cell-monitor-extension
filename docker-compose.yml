services:
  jupyterlab:
    build:
      context: ./cell-monitor-extension
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/notebooks
    environment:
      - JUPYTER_TOKEN=easy  # 簡単なアクセストークン。本番環境では変更してください
    depends_on:
      - fastapi

  fastapi:
    build:
      context: ./fastapi_server
    ports:
      - "8000:8000"
    volumes:
      - ./fastapi_server:/app
    depends_on:
      - postgres
      - redis
      - influxdb

  worker:
    build:
      context: ./fastapi_server
    command: python -u worker/main.py
    volumes:
      - ./fastapi_server:/app
    depends_on:
      - postgres
      - redis

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secretpassword
      POSTGRES_DB: progress_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  influxdb:
    image: influxdb:2.7
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: secretpassword
      DOCKER_INFLUXDB_INIT_ORG: my-org
      DOCKER_INFLUXDB_INIT_BUCKET: progress_bucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: my-super-secret-token
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # JupyterLab拡張機能ビルド用サービス
  # extension-builder:
  #   build:
  #     context: ./cell-monitor-extension
  #     dockerfile: Dockerfile.build
  #   volumes:
  #     # ソースコード全体をマウントすることで、コンテナ内でのビルド結果がホストに直接反映される
  #     - ./cell-monitor-extension:/app
  #   environment:
  #     - HOST_UID=${HOST_UID:-1000}
  #     - HOST_GID=${HOST_GID:-1000}
  #   # デフォルトではコンテナが即終了しないように、常に起動しておくコマンド
  #   privileged: true
  #   # コンテナが終了しないようにttyを有効にする
  #   tty: true

volumes:
  postgres_data:
  influxdb_data:
  redis_data:
