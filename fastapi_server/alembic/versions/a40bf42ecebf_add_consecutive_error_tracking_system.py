"""Add consecutive error tracking system

Revision ID: a40bf42ecebf
Revises: 67002af3055a
Create Date: 2025-08-19 00:00:23.276000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a40bf42ecebf'
down_revision: Union[str, None] = '67002af3055a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('setting_key', sa.String(), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=False),
    sa.Column('setting_type', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_settings_id'), 'system_settings', ['id'], unique=False)
    op.create_index(op.f('ix_system_settings_setting_key'), 'system_settings', ['setting_key'], unique=True)
    op.add_column('cell_executions', sa.Column('consecutive_error_count', sa.Integer(), nullable=True))
    op.add_column('cell_executions', sa.Column('is_significant_error', sa.Boolean(), nullable=True))
    
    # パフォーマンス最適化インデックス
    op.create_index(
        'idx_cell_executions_error_tracking',
        'cell_executions',
        ['student_id', 'cell_id', 'executed_at'],
        postgresql_using='btree'
    )
    op.create_index(
        'idx_cell_executions_errors_only',
        'cell_executions',
        ['student_id', 'cell_id', 'executed_at'],
        postgresql_where="status = 'error'",
        postgresql_using='btree'
    )
    
    # 初期設定データ投入
    from sqlalchemy import text
    connection = op.get_bind()
    connection.execute(text("""
        INSERT INTO system_settings (setting_key, setting_value, setting_type, description) VALUES
        ('consecutive_error_threshold', '3', 'int', '連続エラーと判定する閾値'),
        ('error_detection_enabled', 'true', 'bool', '連続エラー検出機能の有効/無効'),
        ('cache_ttl_seconds', '300', 'int', '設定値キャッシュの生存時間（秒）')
    """))
    
    # 既存データのデフォルト値設定
    connection.execute(text("""
        UPDATE cell_executions 
        SET consecutive_error_count = 0, is_significant_error = false 
        WHERE consecutive_error_count IS NULL OR is_significant_error IS NULL
    """))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # カスタムインデックスを削除
    op.drop_index('idx_cell_executions_errors_only', table_name='cell_executions')
    op.drop_index('idx_cell_executions_error_tracking', table_name='cell_executions')
    
    op.drop_column('cell_executions', 'is_significant_error')
    op.drop_column('cell_executions', 'consecutive_error_count')
    op.drop_index(op.f('ix_system_settings_setting_key'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_id'), table_name='system_settings')
    op.drop_table('system_settings')
    # ### end Alembic commands ###
