"use strict";(self.webpackChunkcell_monitor=self.webpackChunkcell_monitor||[]).push([[509],{509:(e,t,o)=>{o.r(t),o.d(t,{default:()=>S});var n=o(607),l=o(246),s=o(598),i=o(912),r=o(801),a=o.n(r);function c(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}let d="";function p(){let e=m.userId;const t=m.userName||"Anonymous";return e&&e.length>0?(d=e,{userId:e,userName:t}):(d&&d.length>0||(d=c()),{userId:d,userName:t})}let u="",g=c(),m={serverUrl:"",userId:"",userName:"Anonymous",batchSize:1,retryAttempts:3,maxNotifications:3,showNotifications:!0},h={isActive:!1,timerId:null},b=null,x=new Set,f=new Map;function v(){const{userId:e,userName:t}=p();return{eventId:c(),eventType:"help",eventTime:(new Date).toISOString(),userId:e,userName:t,sessionId:g,notebookPath:"",cellId:"",cellIndex:void 0,cellType:void 0,code:"",executionCount:void 0,hasError:void 0,errorMessage:void 0,result:"",executionDurationMs:void 0}}function y(e){if(console.log("toggleHelpState called, current state:",h.isActive),h.isActive=!h.isActive,console.log("New help state:",h.isActive?"ACTIVE (ON)":"INACTIVE (OFF)"),h.isActive){if(console.log("Starting help request timer..."),h.timerId&&clearInterval(h.timerId),h.timerId=setInterval(()=>{if(h.isActive&&b){const e=v();console.log("Sending help event data:",e),b([e])}},5e3),b){const e=v();console.log("Sending immediate help event on activation:",e),b([e])}}else console.log("Stopping help request timer..."),h.timerId&&(clearInterval(h.timerId),h.timerId=null);!function(e){if(e&&e.node)try{e.node.style.fontWeight="bold",e.node.style.fontSize="1.2em",e.node.style.color="white",h.isActive?(e.addClass("jp-mod-active"),e.node.textContent="ヘルプ要請中...",e.node.setAttribute("aria-pressed","true"),e.node.style.backgroundColor="#ff6b35",console.log("Help button set to ACTIVE state")):(e.removeClass("jp-mod-active"),e.node.textContent="講師に助けを求める",e.node.setAttribute("aria-pressed","false"),e.node.style.backgroundColor="#007acc",console.log("Help button set to INACTIVE state (講師に助けを求める)"))}catch(e){console.error("Error updating help button appearance:",e)}else console.warn("Help button or button.node is not available")}(e),console.log("toggleHelpState completed")}const I={id:"cell-monitor:plugin",autoStart:!0,requires:[s.INotebookTracker,i.ISettingRegistry,n.ILabShell],activate:(e,t,o,n)=>{console.log("JupyterLab extension cell-monitor is activated!"),l.Notification.success("Cell Monitor Activated",{autoClose:2e3}),g=c(),o.load(I.id).then(e=>{console.log("JupyterLab extension cell-monitor: settings loaded.");const t=e.schema;console.log("Schema loaded:",t.title,t.description),u=e.get("serverUrl").composite,m.serverUrl=u;const o=e.get("userId").composite,n=e.get("userName").composite,l=e.get("showNotifications").composite;if(m.userId=o||"",m.userName=n||"Anonymous",m.showNotifications=void 0===l||l,console.log("=== SETTINGS LOADED DEBUG ==="),console.log("User ID:",m.userId),console.log("User Name:",m.userName),console.log("Show Notifications:",m.showNotifications),console.log("Server URL:",m.serverUrl),console.log("=============================="),e.changed.connect(()=>{const t=e.get("showNotifications").composite,o=m.showNotifications;m.showNotifications=void 0===t||t,console.log("=== SETTINGS CHANGED ==="),console.log("Show Notifications changed:",o,"->",m.showNotifications),console.log("========================")}),o&&o.length>0)d=o,console.log("User ID set from settings:",d);else{const e=p();console.log("Generated user ID will be used:",e.userId)}m.retryAttempts=e.get("retryAttempts").composite,console.log("Server URL set to:",u),console.log("User settings - ID:",m.userId||"<auto-generated>","Name:",m.userName);const s=e.get("maxNotifications").composite;console.log("Max notifications:",s)}).catch(e=>{console.error("Failed to load cell-monitor settings",e)});const i=async e=>{if(0===e.length)return;console.log("=== SEND PROGRESS DATA DEBUG ==="),console.log("Data to send:",JSON.stringify(e,null,2)),console.log("showNotifications setting:",m.showNotifications),console.log("================================");let t=0;for(;t<=m.retryAttempts;)try{await a().post(m.serverUrl,e),console.log("Student progress data sent successfully:",e.length,"events"),e.length>0&&m.showNotifications?(l.Notification.info(`Learning data sent (${e.length} events)`,{autoClose:3e3}),console.log("Notification displayed (showNotifications: ON)")):e.length>0&&console.log("Notification suppressed (showNotifications: OFF)");break}catch(e){if(console.error("Failed to send student progress data:",e),t++,t>m.retryAttempts){console.error("Max retry attempts reached. Progress data will be lost.");break}await new Promise(e=>setTimeout(e,1e3*Math.pow(2,t-1)))}};b=i,console.log("globalSendProgressData function assigned for help timer");t.currentChanged.connect(()=>{var e;t.currentWidget&&(s.NotebookActions.executed.connect((e,o)=>{const{cell:n}=o;(e=>{var o;try{if(!e||!e.model)return;const n=performance.now(),l=e.model.id,s=Date.now(),r=s-(f.get(l)||0);if(console.log("=== CELL EXECUTION DEBUG ==="),console.log("Cell ID:",l),console.log("Time since last processing:",r,"ms"),console.log("Already processed:",x.has(l)),r<500&&x.has(l))return console.log("Skipping duplicate cell execution processing"),void console.log("============================");x.add(l),f.set(l,s),x.size>100&&Array.from(f.entries()).sort(([,e],[,t])=>e-t).slice(0,50).forEach(([e])=>{x.delete(e),f.delete(e)});let d="";try{e.model.sharedModel&&e.model.sharedModel.source?d=e.model.sharedModel.source:e.model.value&&e.model.value.text?d=e.model.value.text:e.editor&&e.editor.model&&e.editor.model.value&&(d=e.editor.model.value.text)}catch(e){console.warn("Failed to get cell code:",e)}const u=t.currentWidget;if(!u)return;const h=(null===(o=u.context)||void 0===o?void 0:o.path)||"";let b,v;try{const t=u.content.widgets;for(let e=0;e<t.length;e++)if(t[e].model.id===l){b=e;break}e.model.type&&(v=e.model.type)}catch(e){console.warn("Failed to get cell index or type:",e)}let y,I=!1,S="",N="";if(e.outputArea){try{y=e.model.executionCount||void 0}catch(e){console.warn("Failed to get execution count:",e)}const t=e.outputArea.model.toJSON();for(const e of t){if("error"===e.output_type){I=!0,N=`${e.ename}: ${e.evalue}`,S=N;break}"execute_result"!==e.output_type&&"display_data"!==e.output_type||e.data&&e.data["text/plain"]&&(S=e.data["text/plain"])}}const w=performance.now(),C=Math.round(w-n),{userId:E,userName:A}=p(),k={cellId:l,code:d,executionTime:(new Date).toISOString(),result:S,hasError:I,notebookPath:h},T={eventId:c(),eventType:"cell_executed",eventTime:(new Date).toISOString(),userId:E,userName:A,sessionId:g,notebookPath:h,cellId:l,cellIndex:b,cellType:v,code:d,executionCount:y,hasError:I,errorMessage:I?N:void 0,result:S,executionDurationMs:C};(async e=>{if(0===e.length)return;let t=0;const o=m.serverUrl.replace("student-progress","cell-monitor");for(;t<=m.retryAttempts;)try{await a().post(o,e),console.log("Legacy cell execution data sent successfully:",e.length,"items");break}catch(e){if(console.error("Failed to send legacy cell execution data:",e),t++,t>m.retryAttempts){console.error("Max retry attempts reached. Legacy data will be lost.");break}await new Promise(e=>setTimeout(e,1e3*Math.pow(2,t-1)))}})([k]),i([T])}catch(e){console.error("Error processing cell execution:",e)}})(n)}),n.currentChanged.connect((e,t)=>{const o=t.oldValue;if(o&&o.hasOwnProperty("context")&&o.context&&o.context.path){const e=o.context.path,{userId:t,userName:n}=p(),l={eventId:c(),eventType:"notebook_closed",eventTime:(new Date).toISOString(),userId:t,userName:n,sessionId:g,notebookPath:e};i([l])}}),console.log("Cell execution tracker added to",null===(e=t.currentWidget)||void 0===e?void 0:e.context.path),o.load(I.id).then(e=>{u=e.get("serverUrl").composite,m.serverUrl=u,m.userId=e.get("userId").composite||"",m.userName=e.get("userName").composite||"Anonymous",m.retryAttempts=e.get("retryAttempts").composite,t.widgetAdded.connect((e,t)=>{if(t.toolbar)try{const e=t.toolbar.node.querySelector(".jp-help-button");e&&(console.log("Removing existing help button to prevent duplicates"),e.remove());const o=function(){console.log("Creating help button with best practices...");const e=new l.ToolbarButton({className:"jp-help-button jp-ToolbarButton",onClick:()=>{},tooltip:"ヘルプ要請ボタン - クリックでON/OFF切替",label:"講師に助けを求める",iconClass:"",enabled:!0});console.log("ToolbarButton created with best practices:",e),console.log("ToolbarButton node:",e.node),setTimeout(()=>{e.onClick=()=>{console.log("Help button clicked!"),y(e)},e.node.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),console.log("Help button DOM click event triggered!"),y(e)}),console.log("Help button onClick handler and DOM event listener set")},0);const t=e.node;return t.textContent="HELP",t.setAttribute("aria-label","ヘルプ要請ボタン"),t.setAttribute("aria-pressed","false"),t.setAttribute("role","button"),t.setAttribute("tabindex","0"),t.setAttribute("data-help-button","true"),Object.entries({display:"inline-flex !important",visibility:"visible !important",opacity:"1 !important","z-index":"1000 !important",position:"relative !important","min-width":"60px !important","min-height":"32px !important","max-width":"none !important","max-height":"none !important",width:"auto !important",height:"auto !important",overflow:"visible !important","background-color":"#007acc !important",color:"white !important",border:"2px solid #005a9e !important","border-radius":"4px !important",padding:"6px 12px !important",margin:"0 2px !important","font-size":"13px !important","font-weight":"600 !important","font-family":"var(--jp-ui-font-family) !important","text-align":"center !important",cursor:"pointer !important","user-select":"none !important","box-sizing":"border-box !important","align-items":"center !important","justify-content":"center !important"}).forEach(([e,o])=>{t.style.setProperty(e,o.replace(" !important",""),"important")}),t.addEventListener("mouseenter",()=>{t.style.setProperty("background-color","#005a9e","important")}),t.addEventListener("mouseleave",()=>{t.style.setProperty("background-color","#007acc","important")}),console.log("Help button styled with best practices and forced visibility"),e}();t.toolbar.addItem("help-button",o),console.log("Help button added to notebook toolbar"),console.log("Help button DOM node:",o.node),console.log("Help button parent:",o.node.parentElement),console.log("Toolbar children count:",t.toolbar.node.children.length),setTimeout(()=>{var e,o;const n=t.toolbar.node.querySelector(".jp-help-button");if(n){console.log("=== HELP BUTTON DEBUG INFO ==="),console.log("Help button found in DOM:",n);const t=window.getComputedStyle(n);console.log("CSS Display:",t.display),console.log("CSS Visibility:",t.visibility),console.log("CSS Opacity:",t.opacity),console.log("CSS Z-Index:",t.zIndex),console.log("CSS Width:",t.width),console.log("CSS Height:",t.height),console.log("CSS Background Color:",t.backgroundColor),console.log("CSS Color:",t.color),console.log("CSS Position:",t.position),console.log("CSS Overflow:",t.overflow);const l=n.getBoundingClientRect();console.log("Element Rect:",l),console.log("Element Parent:",n.parentElement),console.log("Element Siblings Count:",null===(e=n.parentElement)||void 0===e?void 0:e.children.length),console.log("Element Index in Parent:",Array.from((null===(o=n.parentElement)||void 0===o?void 0:o.children)||[]).indexOf(n)),console.log("Element Tag Name:",n.tagName),console.log("Element Class List:",n.classList.toString()),console.log("Element Text Content:",n.textContent),console.log("Element Inner HTML:",n.innerHTML),console.log("Element Offset Width:",n.offsetWidth),console.log("Element Offset Height:",n.offsetHeight),console.log("Element Client Width:",n.clientWidth),console.log("Element Client Height:",n.clientHeight),n.style.display="inline-block !important",n.style.visibility="visible !important",n.style.opacity="1 !important",n.style.zIndex="9999 !important",n.style.minWidth="50px !important",n.style.minHeight="30px !important",n.style.backgroundColor="#007acc !important",n.style.color="white !important",n.style.border="2px solid #ff0000 !important",n.style.padding="8px 12px !important",n.style.fontSize="14px !important",n.style.fontWeight="bold !important",console.log("Applied forced visibility styles to help button"),console.log("=== END DEBUG INFO ===")}else console.error("Help button not found in DOM after adding")},100)}catch(e){console.error("Error adding help button to toolbar:",e)}const{userId:o,userName:n}=p(),s={eventId:c(),eventType:"notebook_opened",eventTime:(new Date).toISOString(),userId:o,userName:n,sessionId:g,notebookPath:t.context.path};i([s]),t.context&&t.context.saveState&&t.context.saveState.stateChanged&&t.context.saveState.stateChanged.connect((e,o)=>{if("completed"===o){const{userId:e,userName:o}=p(),n={eventId:c(),eventType:"notebook_saved",eventTime:(new Date).toISOString(),userId:e,userName:o,sessionId:g,notebookPath:t.context.path};i([n])}}),t.content&&t.content.model&&t.content.model.contentChanged&&t.content.model.contentChanged.connect(()=>{console.debug("notebook content changed")})})}))})}},S=I}}]);