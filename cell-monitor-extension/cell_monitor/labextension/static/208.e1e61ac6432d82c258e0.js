"use strict";(self.webpackChunkcell_monitor=self.webpackChunkcell_monitor||[]).push([[208],{208:(e,t,s)=>{s.r(t),s.d(t,{default:()=>E});var o,i=s(607),n=s(246),r=s(598),a=s(912);!function(e){e[e.ERROR=0]="ERROR",e[e.WARN=1]="WARN",e[e.INFO=2]="INFO",e[e.DEBUG=3]="DEBUG"}(o||(o={}));class c{constructor(e={}){this.isDevelopment=this.detectDevelopmentMode(),this.config={level:this.isDevelopment?o.DEBUG:o.ERROR,prefix:"[CellMonitor]",enabledInProduction:!1,...e}}detectDevelopmentMode(){try{return"undefined"!=typeof window&&("localhost"===window.location.hostname||"127.0.0.1"===window.location.hostname||null!==document.querySelector("[data-jupyter-widgets-version]"))}catch(e){return!1}}shouldLog(e){return this.isDevelopment||this.config.enabledInProduction?e<=this.config.level:e===o.ERROR}formatMessage(e,t,...s){const o=(new Date).toISOString().split("T")[1].split(".")[0];return[`${this.config.prefix}[${e}][${o}]`,t,...s]}error(e,...t){this.shouldLog(o.ERROR)&&console.error(...this.formatMessage("ERROR",e,...t))}warn(e,...t){this.shouldLog(o.WARN)&&console.warn(...this.formatMessage("WARN",e,...t))}info(e,...t){this.shouldLog(o.INFO)&&console.info(...this.formatMessage("INFO",e,...t))}debug(e,...t){this.shouldLog(o.DEBUG)&&console.log(...this.formatMessage("DEBUG",e,...t))}perfDebug(e,...t){this.isDevelopment&&this.shouldLog(o.DEBUG)&&console.log(...this.formatMessage("PERF",e,...t))}group(e,t){if(this.shouldLog(o.DEBUG)){console.group(this.formatMessage("GROUP",e)[0]);try{t()}finally{console.groupEnd()}}}child(e){return new c({...this.config,prefix:`${this.config.prefix}[${e}]`})}}const l=new c,g=e=>l.child(e),d=g("ErrorHandler");var h,u;!function(e){e.LOW="low",e.MEDIUM="medium",e.HIGH="high",e.CRITICAL="critical"}(h||(h={})),function(e){e.NETWORK="network",e.SETTINGS="settings",e.CELL_PROCESSING="cell_processing",e.UI="ui",e.DATA_TRANSMISSION="data_transmission",e.INITIALIZATION="initialization"}(u||(u={}));const p=new class{constructor(){this.config={showNotifications:!0,logToConsole:!0,reportToServer:!1}}configure(e){this.config={...this.config,...e}}handle(e){const{error:t,category:s,severity:o,context:i,userMessage:n,shouldNotifyUser:r,metadata:a}=e;this.logError(t,s,o,i,a),r&&this.config.showNotifications&&this.showUserNotification(n||this.getDefaultUserMessage(s,o),o),this.config.reportToServer&&this.reportError(e)}logError(e,t,s,o,i){const n=`[${t.toUpperCase()}] ${o?`${o}: `:""}${e.message}`,r={error:e.stack||e.message,category:t,severity:s,context:o,...i};switch(s){case h.CRITICAL:case h.HIGH:d.error(n,r);break;case h.MEDIUM:d.warn(n,r);break;case h.LOW:d.info(n,r)}}showUserNotification(e,t){const s={autoClose:this.getNotificationAutoClose(t)};switch(t){case h.CRITICAL:case h.HIGH:n.Notification.error(e,s);break;case h.MEDIUM:n.Notification.warning(e,s);break;case h.LOW:n.Notification.info(e,s)}}getNotificationAutoClose(e){switch(e){case h.CRITICAL:return 0;case h.HIGH:return 1e4;case h.MEDIUM:return 5e3;case h.LOW:return 3e3}}getDefaultUserMessage(e,t){const s=t===h.CRITICAL||t===h.HIGH?"重要: ":"";switch(e){case u.NETWORK:return`${s}ネットワーク接続に問題があります。インターネット接続を確認してください。`;case u.SETTINGS:return`${s}設定に問題があります。拡張機能の設定を確認してください。`;case u.CELL_PROCESSING:return`${s}セル処理中にエラーが発生しました。しばらく待ってから再試行してください。`;case u.UI:return`${s}画面表示でエラーが発生しました。画面を再読み込みしてください。`;case u.DATA_TRANSMISSION:return`${s}データ送信でエラーが発生しました。自動的に再試行します。`;case u.INITIALIZATION:return`${s}拡張機能の初期化でエラーが発生しました。JupyterLabを再起動してください。`;default:return`${s}予期しないエラーが発生しました。`}}reportError(e){d.debug("Error reporting to server not yet implemented",{errorInfo:e})}},m=(e,t,s)=>{p.handle({error:e,category:u.NETWORK,severity:h.MEDIUM,context:t,userMessage:s,shouldNotifyUser:!0})},f=(e,t,s)=>{p.handle({error:e,category:u.CELL_PROCESSING,severity:h.LOW,context:t,shouldNotifyUser:!1,metadata:s})},N=(e,t,s)=>{p.handle({error:e,category:u.UI,severity:h.MEDIUM,context:t,userMessage:s,shouldNotifyUser:!0})},y=(e,t,s)=>{p.handle({error:e,category:u.DATA_TRANSMISSION,severity:h.MEDIUM,context:t,shouldNotifyUser:!0,metadata:s})};class v{constructor(){this.settings=null,this.logger=g("SettingsManager")}async initialize(e,t){try{this.settings=await e.load(t),this.settings.changed.connect(()=>{this.updateSettingsFromRegistry()}),this.updateSettingsFromRegistry(),this.logger.info("Settings initialized successfully")}catch(e){(e=>{p.handle({error:e,category:u.SETTINGS,severity:h.HIGH,context:"Settings initialization",userMessage:"設定の初期化に失敗しました。デフォルト設定で継続します。",shouldNotifyUser:!0})})(e instanceof Error?e:new Error(String(e)))}}updateSettingsFromRegistry(){if(this.settings)try{const e=this.settings.get("serverUrl").composite,t=this.settings.get("emailAddress").composite,s=this.settings.get("userName").composite,o=this.settings.get("teamName").composite,i=this.settings.get("retryAttempts").composite,n=this.settings.get("showNotifications").composite;this.logger.debug("Settings updated from registry",{serverUrl:e||"default",emailAddress:t||"student001@example.com",userName:s||"Anonymous",teamName:o||"チームA",retryAttempts:i,showNotifications:n})}catch(e){this.logger.warn("Failed to update settings from registry:",e)}}getSettings(){return this.settings}getUserInfo(){return this.settings?{emailAddress:this.settings.get("emailAddress").composite||"student001@example.com",userName:this.settings.get("userName").composite||"Anonymous",teamName:this.settings.get("teamName").composite||"チームA"}:{emailAddress:"student001@example.com",userName:"Anonymous",teamName:"チームA"}}getServerUrl(){return this.settings&&this.settings.get("serverUrl").composite||"http://localhost:8000/api/v1/events"}getRetryAttempts(){return this.settings&&this.settings.get("retryAttempts").composite||3}getNotificationSettings(){if(!this.settings)return{showNotifications:!0};const e=this.settings.get("showNotifications").composite;return{showNotifications:void 0===e||e}}}function w(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const t=16*Math.random()|0;return("x"===e?t:3&t|8).toString(16)})}class I{constructor(e,t,s){this.executionHandlerRegistered=!1,this.helpSession=new Map,this.processedCells=new Map,this.logger=g("EventManager"),this.notebookTracker=e,this.settingsManager=t,this.dataTransmissionService=s,this.sessionId=w()}initialize(){this.setupNotebookTracking(),this.setupExecutionTracking()}setupNotebookTracking(){this.notebookTracker.widgetAdded.connect((e,t)=>{const s=t.context.path||"unknown";this.sendNotebookEvent("notebook_opened",s),this.addHelpButtonToNotebook(t)})}setupExecutionTracking(){this.executionHandlerRegistered||(r.NotebookActions.executed.connect((e,t)=>{const{cell:s}=t;this.processCellExecution(s)}),this.executionHandlerRegistered=!0,this.logger.info("Cell execution handler registered (once)"))}processCellExecution(e){var t,s;try{if(!e||!e.model)return;const s=performance.now(),o=e.model.id,i=Date.now(),n=i-(this.processedCells.get(o)||0);if(this.logger.perfDebug("Cell execution processing",{cellId:o,timeSinceLastProcessing:n,alreadyProcessed:this.processedCells.has(o),memoryUsage:`${this.processedCells.size} / 50 max`}),n<500&&this.processedCells.has(o))return void this.logger.debug("Skipping duplicate cell execution processing",{cellId:o,timeDiff:n});if(this.processedCells.set(o,i),this.processedCells.size>=50){const e=this.processedCells.keys().next().value;e&&(this.processedCells.delete(e),this.logger.debug("Memory cleanup: removed oldest cell entry",{removedKey:e,currentSize:this.processedCells.size}))}let r="";try{e.model.sharedModel&&e.model.sharedModel.source?r=e.model.sharedModel.source:e.model.value&&e.model.value.text?r=e.model.value.text:e.editor&&e.editor.model&&e.editor.model.value&&(r=e.editor.model.value.text)}catch(e){this.logger.warn("Failed to get cell code:",e)}const a=this.notebookTracker.currentWidget;if(!a)return;const c=(null===(t=a.context)||void 0===t?void 0:t.path)||"";let l,g;try{const t=a.content.widgets;for(let e=0;e<t.length;e++)if(t[e].model.id===o){l=e;break}e.model.type&&(g=e.model.type)}catch(e){this.logger.warn("Failed to get cell index or type:",e)}let d,h=!1,u="",p="";if(e.outputArea){try{d=e.model.executionCount||void 0}catch(e){this.logger.warn("Failed to get execution count:",e)}const t=e.outputArea.model.toJSON();for(const e of t){if("error"===e.output_type){h=!0,p=`${e.ename}: ${e.evalue}`,u=p;break}"execute_result"!==e.output_type&&"display_data"!==e.output_type||e.data&&e.data["text/plain"]&&(u=e.data["text/plain"])}}const m=performance.now(),f=Math.round(m-s),{emailAddress:N,userName:y,teamName:v}=this.settingsManager.getUserInfo(),I={eventId:w(),eventType:"cell_executed",eventTime:(new Date).toISOString(),emailAddress:N,teamName:v,userName:y,sessionId:this.sessionId,notebookPath:c,cellId:o,cellIndex:l,cellType:g,code:r,executionCount:d,hasError:h,errorMessage:h?p:void 0,result:u,executionDurationMs:f};this.dataTransmissionService.sendProgressData([I])}catch(t){f(t instanceof Error?t:new Error(String(t)),"Cell execution processing",{cellId:null===(s=null==e?void 0:e.model)||void 0===s?void 0:s.id})}}async sendNotebookEvent(e,t){try{const{emailAddress:s,userName:o,teamName:i}=this.settingsManager.getUserInfo(),n={eventId:w(),eventType:e,eventTime:(new Date).toISOString(),emailAddress:s,teamName:i,userName:o,sessionId:this.sessionId,notebookPath:t};await this.dataTransmissionService.sendProgressData([n])}catch(s){f(s instanceof Error?s:new Error(String(s)),"Notebook event transmission",{eventType:e,notebookPath:t})}}async startHelpSession(){try{const e=this.notebookTracker.currentWidget;if(!e)return void n.Notification.warning("ノートブックが開かれていません");const t=e.context.path||"unknown",{emailAddress:s,userName:o,teamName:i}=this.settingsManager.getUserInfo();this.helpSession.set(t,!0);const r={eventId:w(),eventType:"help",eventTime:(new Date).toISOString(),emailAddress:s,teamName:i,userName:o,sessionId:this.sessionId,notebookPath:t};await this.dataTransmissionService.sendProgressData([r]);const{showNotifications:a}=this.settingsManager.getNotificationSettings();a&&n.Notification.info("ヘルプセッションを開始しました",{autoClose:2e3})}catch(e){N(e instanceof Error?e:new Error(String(e)),"Help session start","ヘルプセッションの開始に失敗しました。")}}async stopHelpSession(){try{const e=this.notebookTracker.currentWidget;if(!e)return;const t=e.context.path||"unknown";if(!this.helpSession.get(t))return;const{emailAddress:s,userName:o,teamName:i}=this.settingsManager.getUserInfo();this.helpSession.set(t,!1);const r={eventId:w(),eventType:"help_stop",eventTime:(new Date).toISOString(),emailAddress:s,teamName:i,userName:o,sessionId:this.sessionId,notebookPath:t};await this.dataTransmissionService.sendProgressData([r]);const{showNotifications:a}=this.settingsManager.getNotificationSettings();a&&n.Notification.success("ヘルプセッションを停止しました",{autoClose:2e3})}catch(e){N(e instanceof Error?e:new Error(String(e)),"Help session stop","ヘルプセッションの停止に失敗しました。")}}startNewSession(){this.sessionId=w(),this.helpSession.clear(),this.processedCells.clear(),this.logger.info("New session started:",this.sessionId)}addHelpButtonToNotebook(e){if(e.toolbar)try{const t=e.toolbar.node.querySelector(".jp-help-button");t&&(this.logger.debug("Removing existing help button to prevent duplicates"),t.remove());const s=this.createHelpButton();e.toolbar.addItem("help-button",s),this.logger.info("Help button added to notebook toolbar")}catch(e){N(e instanceof Error?e:new Error(String(e)),"Help button creation","ヘルプボタンの作成に失敗しました。")}}createHelpButton(){this.logger.debug("Creating help button with best practices...");const e=new n.ToolbarButton({className:"jp-help-button jp-ToolbarButton",onClick:()=>{},tooltip:"ヘルプ要請ボタン - クリックでON/OFF切替",label:"講師に助けを求める",iconClass:"",enabled:!0});return this.logger.debug("ToolbarButton created:",e),setTimeout(()=>{e.onClick=()=>{this.logger.debug("Help button clicked!"),this.toggleHelpState(e)},e.node.addEventListener("click",t=>{t.preventDefault(),t.stopPropagation(),this.logger.debug("Help button DOM click event triggered"),this.toggleHelpState(e)}),this.logger.debug("Help button click handlers set up")},100),e}toggleHelpState(e){const t=this.notebookTracker.currentWidget;if(!t)return void n.Notification.warning("ノートブックが開かれていません");const s=t.context.path||"unknown",o=this.helpSession.get(s)||!1;this.logger.debug("toggleHelpState called, current state:",o),o?(this.stopHelpSession(),e.node.style.backgroundColor="",e.node.style.color="",e.node.textContent="講師に助けを求める"):(this.startHelpSession(),e.node.style.backgroundColor="#ff6b6b",e.node.style.color="white",e.node.textContent="ヘルプ中...")}}var S=s(801),x=s.n(S);class b{constructor(e){this.logger=g("DataTransmissionService"),this.settingsManager=e}async sendProgressData(e){if(0===e.length)return;const{showNotifications:t}=this.settingsManager.getNotificationSettings();this.logger.debug("Sending progress data",{eventCount:e.length,showNotifications:t,events:e.map(e=>({eventType:e.eventType,eventId:e.eventId}))});const s=this.settingsManager.getServerUrl(),o=this.settingsManager.getRetryAttempts();let i=0;for(;i<=o;)try{await x().post(s,e),this.logger.info("Student progress data sent successfully",{eventCount:e.length}),e.length>0&&t&&n.Notification.info(`Learning data sent (${e.length} events)`,{autoClose:3e3});break}catch(t){const s=t instanceof Error?t:new Error(String(t));if(i>=o){y(s,"Progress data transmission - max retries exceeded",{eventCount:e.length,retryAttempt:i});break}m(s,`Progress data transmission - retry ${i}/${o}`,void 0),await new Promise(e=>setTimeout(e,1e3*Math.pow(2,i-1))),i++}}async sendLegacyData(e){if(0===e.length)return;const t=this.settingsManager.getServerUrl().replace("student-progress","cell-monitor"),s=this.settingsManager.getRetryAttempts();let o=0;for(;o<=s;)try{await x().post(t,e),this.logger.info("Legacy cell execution data sent successfully",{itemCount:e.length});break}catch(t){const i=t instanceof Error?t:new Error(String(t));if(o>=s){y(i,"Legacy data transmission - max retries exceeded",{itemCount:e.length,retryAttempt:o});break}m(i,`Legacy data transmission - retry ${o}/${s}`),o++,await new Promise(e=>setTimeout(e,1e3*Math.pow(2,o-1)))}}}const M="cell-monitor:plugin";class T{constructor(e,t,s,o){this.logger=g("CellMonitorPlugin"),this.app=e,this.settingsManager=new v,this.dataTransmissionService=new b(this.settingsManager),this.eventManager=new I(t,this.settingsManager,this.dataTransmissionService),this.initialize(s,o)}async initialize(e,t){try{this.logger.info("Initializing Cell Monitor extension..."),await this.settingsManager.initialize(e,M);const{showNotifications:s}=this.settingsManager.getNotificationSettings();p.configure({showNotifications:s}),this.eventManager.initialize(),this.setupToolbarButtons(t),s&&n.Notification.success("Cell Monitor Extension Activated",{autoClose:2e3}),this.logger.info("Cell Monitor extension activated successfully")}catch(e){throw(e=>{p.handle({error:e,category:u.INITIALIZATION,severity:h.CRITICAL,context:"Plugin initialization",shouldNotifyUser:!0})})(e instanceof Error?e:new Error(String(e))),e}}setupToolbarButtons(e){const t=new n.ToolbarButton({label:"新セッション",tooltip:"新しい学習セッションを開始します",onClick:()=>this.startNewSession(),className:"jp-new-session-button"});this.app.shell.add(t,"top",{rank:1001}),this.logger.debug("New session button added to toolbar")}startNewSession(){this.logger.info("Starting new learning session"),this.eventManager.startNewSession();const{showNotifications:e}=this.settingsManager.getNotificationSettings();e&&n.Notification.info("新しい学習セッションを開始しました",{autoClose:2e3})}}const E={id:M,description:"JupyterLab extension for cell execution monitoring",autoStart:!0,requires:[r.INotebookTracker,a.ISettingRegistry,i.ILabShell],activate:async(e,t,s,o)=>{new T(e,t,s,o)}}}}]);
