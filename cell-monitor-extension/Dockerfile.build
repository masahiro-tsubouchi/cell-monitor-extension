# Use the same official Python runtime as the main Dockerfile
FROM python:3.12-slim

# Set the working directory in the container
WORKDIR /app

# Install system dependencies, including Node.js 20.x, matching the main Dockerfile
RUN apt-get update && apt-get upgrade -y && apt-get install -y curl git && \
    curl -fsSL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Enable corepack to manage yarn, matching the main Dockerfile
RUN corepack enable

# Install Python build tools
RUN pip install --no-cache-dir --upgrade pip build jupyterlab~=4.0 wheel twine

# Copy the extension source code into the container
COPY . .

# Set the default command to run the entire build process.
# This will be executed when 'docker compose run' is called.
CMD ["sh", "-c", "jlpm install && jlpm build && python -m build && chown -R ${HOST_UID:-1000}:${HOST_GID:-1000} /app/dist /app/pyproject.toml /app/lib"]
